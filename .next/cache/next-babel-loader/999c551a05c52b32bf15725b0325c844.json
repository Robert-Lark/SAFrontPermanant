{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Products.js\";\nimport { useQuery } from \"@apollo/client\";\nimport Product from \"./Product\";\nconst ALL_PRODUCTS_QUERY = gql`\nquery ALL_PRODUCTS_QUERY\t{\n  allProducts{\n    id\n    name\n    price\n    description\n    photo {\n      id \n      image{\n        publicUrlTransformed\n      }\n    }\n`;\nconst ProductsListStyles = styled.div`\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\ngrid-gap: 60px;\n`;\nexport default function Products() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message, \"...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n    children: data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      product: product\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["useQuery","Product","ALL_PRODUCTS_QUERY","gql","ProductsListStyles","styled","div","Products","data","error","loading","message","allProducts","map","product"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,gBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAGA,MAAMC,kBAAkB,GAAGC,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAcA,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,GAAI;AACtC;AACA;AACA;AACA,CAJA;AAMA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBV,QAAQ,CAACE,kBAAD,CAAvC;AACA,MAAIQ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE,QAAC,kBAAD;AAAA,cACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAsBC,OAAD,iBACpB,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import {useQuery} from \"@apollo/client\";\nimport Product from \"./Product\";\n\n\nconst ALL_PRODUCTS_QUERY = gql`\nquery ALL_PRODUCTS_QUERY\t{\n  allProducts{\n    id\n    name\n    price\n    description\n    photo {\n      id \n      image{\n        publicUrlTransformed\n      }\n    }\n`;\nconst ProductsListStyles = styled.div`\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\ngrid-gap: 60px;\n`\n\nexport default function Products() {\n  const {data, error, loading} = useQuery(ALL_PRODUCTS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}...</p>;\n  return (\n    <ProductsListStyles>\n      {data.allProducts.map((product) => (\n        <Product product={product}/>\n      ))}\n    </ProductsListStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}