{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/components/AddToCart.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nconst ADD_TO_CART_MUTATION = gql`\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\n    addToCart(productId: $id) {\n      id\n    }\n  }\n`;\nexport default function AddToCart({\n  id\n}) {\n  const [addToCart, {\n    loading\n  }] = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: loading,\n    type: \"button\",\n    onClick: addToCart,\n    children: [\"Add\", loading && 'ing', \" To Cart\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/components/AddToCart.js"],"names":["useMutation","gql","CURRENT_USER_QUERY","ADD_TO_CART_MUTATION","AddToCart","id","addToCart","loading","variables","refetchQueries","query"],"mappings":";;AAAA,SAAQA,WAAR,QAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,kBAAR,QAAiC,QAAjC;AAGA,MAAMC,oBAAoB,GAAGF,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAe,SAASG,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAyB;AACtC,QAAM,CAACC,SAAD,EAAY;AAACC,IAAAA;AAAD,GAAZ,IAAyBP,WAAW,CAACG,oBAAD,EAAuB;AAC/DK,IAAAA,SAAS,EAAE;AAACH,MAAAA;AAAD,KADoD;AAE/DI,IAAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAER;AAAR,KAAD;AAF+C,GAAvB,CAA1C;AAIA,sBACE;AAAQ,IAAA,QAAQ,EAAEK,OAAlB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAED,SAAlD;AAAA,sBAGMC,OAAO,IAAI,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import {useMutation} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport {CURRENT_USER_QUERY} from \"./User\"\n\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\n    addToCart(productId: $id) {\n      id\n    }\n  }\n`;\n\nexport default function AddToCart({id}) {\n  const [addToCart, {loading}] = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {id},\n    refetchQueries: [{query: CURRENT_USER_QUERY}]\n  });\n  return (\n    <button disabled={loading} type=\"button\" onClick={addToCart}>\n        {/* when the user clicks the the 'add' will change to 'adding'\n        for the duration of the loading state  */}\n      Add{loading && 'ing'} To Cart\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}