{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/components/AddToCart.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\\n    addToCart(productId: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nvar ADD_TO_CART_MUTATION = gql(_templateObject());\nexport default function AddToCart(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useMutation = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: loading,\n    type: \"button\",\n    onClick: addToCart,\n    children: [\"Add\", loading && 'ing', \" To Cart\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddToCart, \"XMbW7LTC7Qg1OGV6K4Cp9Jybzw0=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToCart\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/components/AddToCart.js"],"names":["useMutation","gql","CURRENT_USER_QUERY","ADD_TO_CART_MUTATION","AddToCart","id","variables","refetchQueries","query","addToCart","loading"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAQA,WAAR,QAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,kBAAR,QAAiC,QAAjC;AAGA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B;AAQA,eAAe,SAASG,SAAT,OAAyB;AAAA;;AAAA,MAALC,EAAK,QAALA,EAAK;;AAAA,qBACPL,WAAW,CAACG,oBAAD,EAAuB;AAC/DG,IAAAA,SAAS,EAAE;AAACD,MAAAA,EAAE,EAAFA;AAAD,KADoD;AAE/DE,IAAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEN;AAAR,KAAD;AAF+C,GAAvB,CADJ;AAAA;AAAA,MAC/BO,SAD+B;AAAA,MACnBC,OADmB,oBACnBA,OADmB;;AAKtC,sBACE;AAAQ,IAAA,QAAQ,EAAEA,OAAlB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAED,SAAlD;AAAA,sBAGMC,OAAO,IAAI,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAZuBN,S;UACSJ,W;;;KADTI,S","sourcesContent":["import {useMutation} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport {CURRENT_USER_QUERY} from \"./User\"\n\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\n    addToCart(productId: $id) {\n      id\n    }\n  }\n`;\n\nexport default function AddToCart({id}) {\n  const [addToCart, {loading}] = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {id},\n    refetchQueries: [{query: CURRENT_USER_QUERY}]\n  });\n  return (\n    <button disabled={loading} type=\"button\" onClick={addToCart}>\n        {/* when the user clicks the the 'add' will change to 'adding'\n        for the duration of the loading state  */}\n      Add{loading && 'ing'} To Cart\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}