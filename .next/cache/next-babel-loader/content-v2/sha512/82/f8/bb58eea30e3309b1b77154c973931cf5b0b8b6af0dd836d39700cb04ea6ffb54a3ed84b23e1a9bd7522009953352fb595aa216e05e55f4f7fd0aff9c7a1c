{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/pages/orders.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\\n  grid-gap: 4rem;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query USER_ORDER_QUERY {\\n    allOrders {\\n      id\\n      charge\\n      total\\n      user {\\n        id\\n      }\\n      items {\\n        id\\n        name\\n        description\\n        price\\n        quantity\\n        photo {\\n          image {\\n            publicUrlTransformed\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// this will catch the specific route of the order [id] is a\n// placeholder for the order id\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport formatMoney from \"../lib/formatMoney\";\nimport OrderItemStyles from '../components/styles/OrderItemStyles';\nimport Link from 'next/link';\nvar USER_ORDER_QUERY = gql(_templateObject());\nvar OrderUl = styled.ul(_templateObject2());\n_c = OrderUl;\nexport default function OrdersPage() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(USER_ORDER_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  var allOrders = data.allOrders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Your or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(function (order) {\n        return /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/order/\".concat(order.id),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-meta\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatMoney(order.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrdersPage, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = OrdersPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderUl\");\n$RefreshReg$(_c2, \"OrdersPage\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/pages/orders.js"],"names":["useQuery","gql","Head","styled","ErrorMessage","formatMoney","OrderItemStyles","Link","USER_ORDER_QUERY","OrderUl","ul","OrdersPage","data","error","loading","allOrders","length","map","order","id","total"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA,SAAQA,QAAR,QAAuB,gBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,IAAMC,gBAAgB,GAAGP,GAAH,mBAAtB;AAwBA,IAAMQ,OAAO,GAAGN,MAAM,CAACO,EAAV,oBAAb;KAAMD,O;AAMN,eAAe,SAASE,UAAT,GAAsB;AAAA;;AAAA;;AAAA,kBACJX,QAAQ,CAACQ,gBAAD,CADJ;AAAA,MAC5BI,IAD4B,aAC5BA,IAD4B;AAAA,MACtBC,KADsB,aACtBA,KADsB;AAAA,MACfC,OADe,aACfA,OADe;;AAEnC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAHwB,MAI5BE,SAJ4B,GAIfH,IAJe,CAI5BG,SAJ4B;AAKnC,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BAAcA,SAAS,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAA,gBACGD,SAAS,CAACE,GAAV,CAAc,UAACC,KAAD;AAAA,4BACb,QAAC,eAAD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,mBAAYA,KAAK,CAACC,EAAlB,CAAV;AAAA,mCACA;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE;AAAA,0BAAId,WAAW,CAACa,KAAK,CAACE,KAAP;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADa;AAAA,OAAd;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxBuBT,U;UACSX,Q;;;MADTW,U","sourcesContent":["// this will catch the specific route of the order [id] is a\n// placeholder for the order id\n\nimport {useQuery} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport formatMoney from \"../lib/formatMoney\";\nimport OrderItemStyles from '../components/styles/OrderItemStyles'\nimport Link from 'next/link'\n\n\nconst USER_ORDER_QUERY = gql`\n  query USER_ORDER_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n`;\n\nexport default function OrdersPage() {\n  const {data, error, loading} = useQuery(USER_ORDER_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const {allOrders} = data;\n  return (\n    <div>\n      <Head>\n        <title>Your or</title>\n      </Head>\n      <h2>You have {allOrders.length} orders</h2>\n      <OrderUl>\n        {allOrders.map((order) => (\n          <OrderItemStyles>\n            <Link href={`/order/${order.id}`}>\n            <div className=\"order-meta\">\n              <p>{formatMoney(order.total)}</p>\n            </div>\n            </Link>\n          </OrderItemStyles>\n        ))}\n      </OrderUl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}