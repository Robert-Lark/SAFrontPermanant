{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/pages/orders.js\";\n// this will catch the specific route of the order [id] is a\n// placeholder for the order id\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport formatMoney from \"../lib/formatMoney\";\nimport OrderItemStyles from \"../components/styles/OrderItemStyles\";\nimport Link from \"next/link\";\nconst USER_ORDER_QUERY = gql`\n  query USER_ORDER_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n`; //a function to count the total number of items in an order\n\nfunction countItemsInAnOrder(order) {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n}\n\nexport default function OrdersPage() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USER_ORDER_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Your Orders (\", allOrders.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/order/${order.id}`,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-meta\",\n              children: [countItemsInAnOrder(order) == 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [countItemsInAnOrder(order), \" Item\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [countItemsInAnOrder(order), \" Items\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatMoney(order.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"images\",\n                children: order.items.map(item => {\n                  var _item$photo, _item$photo$image;\n\n                  return /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: (_item$photo = item.photo) === null || _item$photo === void 0 ? void 0 : (_item$photo$image = _item$photo.image) === null || _item$photo$image === void 0 ? void 0 : _item$photo$image.publicUrlTransformed,\n                    alt: item.name\n                  }, `image id ${item.id}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/pages/orders.js"],"names":["useQuery","gql","Head","styled","ErrorMessage","formatMoney","OrderItemStyles","Link","USER_ORDER_QUERY","OrderUl","ul","countItemsInAnOrder","order","items","reduce","tally","item","quantity","OrdersPage","data","error","loading","allOrders","length","map","id","total","photo","image","publicUrlTransformed","name"],"mappings":"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","sourcesContent":["// this will catch the specific route of the order [id] is a\n// placeholder for the order id\n\nimport {useQuery} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport formatMoney from \"../lib/formatMoney\";\nimport OrderItemStyles from \"../components/styles/OrderItemStyles\";\nimport Link from \"next/link\";\n\nconst USER_ORDER_QUERY = gql`\n  query USER_ORDER_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n`;\n\n//a function to count the total number of items in an order\n\nfunction countItemsInAnOrder(order) {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n}\n\nexport default function OrdersPage() {\n  const {data, error, loading} = useQuery(USER_ORDER_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const {allOrders} = data;\n  return (\n    <div>\n      <Head>\n        <title>Your Orders ({allOrders.length})</title>\n      </Head>\n      <h2>You have {allOrders.length} orders</h2>\n      <OrderUl>\n        {allOrders.map((order) => (\n          <OrderItemStyles>\n            <Link href={`/order/${order.id}`}>\n              <>\n              <div className=\"order-meta\">\n                {countItemsInAnOrder(order) == 1 ? (\n                  <p>{countItemsInAnOrder(order)} Item</p>\n                ) : (\n                  <p>{countItemsInAnOrder(order)} Items</p>\n                )}\n                <p>{formatMoney(order.total)}</p>\n                <div className=\"images\">\n                  {order.items.map((item) => (\n                    <img\n                      key={`image id ${item.id}`}\n                      src={item.photo?.image?.publicUrlTransformed}\n                      alt={item.name}\n                    />\n                  ))}\n                </div>\n              </div>\n              </>\n            </Link>\n          </OrderItemStyles>\n        ))}\n      </OrderUl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}