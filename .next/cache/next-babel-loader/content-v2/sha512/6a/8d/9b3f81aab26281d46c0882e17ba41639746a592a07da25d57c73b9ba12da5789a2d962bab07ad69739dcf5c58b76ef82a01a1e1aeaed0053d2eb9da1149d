{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/components/Reset.js\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $email: String!\n    $password: String!\n    $token: String!\n  ) {\n    redeemUserPasswordResetToken(\n      email: $email\n      token: $token\n      password: $password\n    ) {\n      code\n      message\n    }\n  }\n`;\nexport default function Reset() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\",\n    password: \"\",\n    token: \"\"\n  });\n  const [reset, {\n    data,\n    loading,\n    error\n  }] = useMutation(RESET_MUTATION, {\n    variables: inputs\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await reset().catch(console.error);\n    resetForm(); //here the email and password is sent to the graphql api\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! - You can now sign .\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"RequestReset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/components/Reset.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","Error","RESET_MUTATION","Reset","inputs","handleChange","resetForm","email","password","token","reset","data","loading","error","variables","handleSubmit","e","preventDefault","catch","console","redeemUserPasswordResetToken"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,kBAAR,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,cAAc,GAAGN,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,eAAe,SAASO,KAAT,GAAiB;AAC9B,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAoCP,OAAO,CAAC;AAChDQ,IAAAA,KAAK,EAAE,EADyC;AAEhDC,IAAAA,QAAQ,EAAE,EAFsC;AAGhDC,IAAAA,KAAK,EAAE;AAHyC,GAAD,CAAjD;AAMA,QAAM,CAACC,KAAD,EAAQ;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAR,IAAkChB,WAAW,CAACK,cAAD,EAAiB;AAClEY,IAAAA,SAAS,EAAEV;AADuD,GAAjB,CAAnD;;AAIA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMP,KAAK,GAAGQ,KAAR,CAAcC,OAAO,CAACN,KAAtB,CAAN;AACAP,IAAAA,SAAS,GAHoB,CAI7B;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAES,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACG,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAES,4BAAN,MAAuC,IAAvC,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEhB,MAAM,CAACG,KALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAeE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,YAAY,EAAC,UAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACI,QALhB;AAME,UAAA,QAAQ,EAAEH;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eA0BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD","sourcesContent":["import gql from \"graphql-tag\";\nimport {useMutation} from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport {CURRENT_USER_QUERY} from \"./User\";\nimport Error from \"./ErrorMessage\";\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION(\n    $email: String!\n    $password: String!\n    $token: String!\n  ) {\n    redeemUserPasswordResetToken(\n      email: $email\n      token: $token\n      password: $password\n    ) {\n      code\n      message\n    }\n  }\n`;\n\nexport default function Reset() {\n  const {inputs, handleChange, resetForm} = useForm({\n    email: \"\",\n    password: \"\",\n    token: \"\",\n  });\n\n  const [reset, {data, loading, error}] = useMutation(RESET_MUTATION, {\n    variables: inputs,\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await reset().catch(console.error);\n    resetForm();\n    //here the email and password is sent to the graphql api\n  }\n\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Reset your Password</h2>\n      <Error error={error} />\n      <fieldset>\n        {data?.redeemUserPasswordResetToken === null && (\n          <p>Success! - You can now sign .</p>\n        )}\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"password\"\n            value={inputs.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">RequestReset</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}