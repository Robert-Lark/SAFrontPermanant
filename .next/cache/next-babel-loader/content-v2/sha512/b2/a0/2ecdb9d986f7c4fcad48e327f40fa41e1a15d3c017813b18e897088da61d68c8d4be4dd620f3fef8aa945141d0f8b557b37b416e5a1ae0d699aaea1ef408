{"ast":null,"code":"import _regeneratorRuntime from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/components/RequestReset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REQUEST_RESET_MUTATION(\\n    $email: String!\\n  ) {\\n    sendUserPasswordResetLink(email: $email) {\\n    code\\n    message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nvar REQUEST_RESET_MUTATION = gql(_templateObject());\nexport default function RequestReset() {\n  _s();\n\n  var _useForm = useForm({\n    email: \"\"\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs //refetch the currently logged in user\n    // refetchQueries: [{query: CURRENT_USER_QUERY}],\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signUp = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return signUp()[\"catch\"](console.error);\n\n            case 3:\n              resetForm(); //here the email and password is sent to the graphql api\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [(data === null || data === void 0 ? void 0 : data.sendUserPasswordResetLink) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Success! - Check your email for a password reset link.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"RequestReset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RequestReset, \"fHyPTkZEMTnYeM0AGp/ruXfZCas=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = RequestReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestReset\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/components/RequestReset.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","Error","REQUEST_RESET_MUTATION","RequestReset","email","inputs","handleChange","resetForm","variables","signUp","data","loading","error","handleSubmit","e","preventDefault","console","sendUserPasswordResetLink"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,kBAAR,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAMC,sBAAsB,GAAGN,GAAH,mBAA5B;AAWA,eAAe,SAASO,YAAT,GAAwB;AAAA;;AAAA,iBACKJ,OAAO,CAAC;AAChDK,IAAAA,KAAK,EAAE;AADyC,GAAD,CADZ;AAAA,MAC9BC,MAD8B,YAC9BA,MAD8B;AAAA,MACtBC,YADsB,YACtBA,YADsB;AAAA,MACRC,SADQ,YACRA,SADQ;;AAAA,qBAKIV,WAAW,CAACK,sBAAD,EAAyB;AAC3EM,IAAAA,SAAS,EAAEH,MADgE,CAE3E;AACA;;AAH2E,GAAzB,CALf;AAAA;AAAA,MAK9BI,MAL8B;AAAA;AAAA,MAKrBC,IALqB,kBAKrBA,IALqB;AAAA,MAKfC,OALe,kBAKfA,OALe;AAAA,MAKNC,KALM,kBAKNA,KALM;;AAAA,WAWtBC,YAXsB;AAAA;AAAA;;AAAA;AAAA,6EAWrC,iBAA4BC,CAA5B;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF;AADF;AAAA,qBAEQN,MAAM,WAAN,CAAeO,OAAO,CAACJ,KAAvB,CAFR;;AAAA;AAGEL,cAAAA,SAAS,GAHX,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXqC;AAAA;AAAA;;AAqBrC,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEM,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,iBACC,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,yBAAN,MAAoC,IAApC,iBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAME;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEZ,MAAM,CAACD,KALhB;AAME,UAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAkBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA/CuBH,Y;UACoBJ,O,EAIDF,W;;;KALnBM,Y","sourcesContent":["import gql from \"graphql-tag\";\nimport {useMutation} from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport {CURRENT_USER_QUERY} from \"./User\";\nimport Error from \"./ErrorMessage\";\n\nconst REQUEST_RESET_MUTATION = gql`\n  mutation REQUEST_RESET_MUTATION(\n    $email: String!\n  ) {\n    sendUserPasswordResetLink(email: $email) {\n    code\n    message\n    }\n  }\n`;\n\nexport default function RequestReset() {\n  const {inputs, handleChange, resetForm} = useForm({\n    email: \"\",\n  });\n\n  const [signUp, {data, loading, error}] = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs,\n    //refetch the currently logged in user\n    // refetchQueries: [{query: CURRENT_USER_QUERY}],\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await signUp().catch(console.error);\n    resetForm();\n    //here the email and password is sent to the graphql api\n  }\n\n\n \n\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      <h2>Request a Password Reset</h2>\n      <Error error={error} />\n      <fieldset>\n      {data?.sendUserPasswordResetLink === null && (\n      <p>\n        Success! - Check your email for a password reset link. \n      </p>\n    )}\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n       \n        <button type=\"submit\">RequestReset</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}