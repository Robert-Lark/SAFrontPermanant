{"ast":null,"code":"import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage';\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`; // export default function SignIn() {\n//   const {inputs, handleChange, resetForm} = useForm({\n//     email: \"\",\n//     password: \"\",\n//   });\n//   const [signin, {error, loading}] = useMutation(SIGN_IN_MUTATION, {\n//     variables: inputs,\n//     //refetch the currently logged in user\n//     refetchQueries: [{query: CURRENT_USER_QUERY}],\n//   });\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     console.log(inputs);\n//     const res = await SignIn();\n//     console.log(res);\n//     resetForm()\n//     //here the email and password is sent to the graphql api\n//   }\n//   return (\n//     <Form method=\"POST\" onSubmit={handleSubmit}>\n//       <h2> Sign Into Your Account</h2>\n//       <fieldset>\n//         <label htmlFor=\"email\">\n//           Email\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Your Email Address\"\n//             autoComplete=\"email\"\n//             value={inputs.email}\n//             onChange={handleChange}\n//           ></input>\n//         </label>\n//         <label htmlFor=\"password\">\n//           password\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Your Password\"\n//             autoComplete=\"password\"\n//             value={inputs.password}\n//             onChange={handleChange}\n//           ></input>\n//         </label>\n//         <button type=\"submit\">Sign In</button>\n//       </fieldset>\n//     </Form>\n//   );\n// }","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/SignIn.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","Error","SIGNIN_MUTATION"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,eAAe,GAAGN,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA,C,CAkBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport Error from './ErrorMessage';\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\n\n// export default function SignIn() {\n//   const {inputs, handleChange, resetForm} = useForm({\n//     email: \"\",\n//     password: \"\",\n//   });\n\n//   const [signin, {error, loading}] = useMutation(SIGN_IN_MUTATION, {\n//     variables: inputs,\n//     //refetch the currently logged in user\n//     refetchQueries: [{query: CURRENT_USER_QUERY}],\n//   });\n\n//   async function handleSubmit(e) {\n//     e.preventDefault();\n//     console.log(inputs);\n//     const res = await SignIn();\n//     console.log(res);\n//     resetForm()\n//     //here the email and password is sent to the graphql api\n//   }\n//   return (\n//     <Form method=\"POST\" onSubmit={handleSubmit}>\n//       <h2> Sign Into Your Account</h2>\n//       <fieldset>\n//         <label htmlFor=\"email\">\n//           Email\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Your Email Address\"\n//             autoComplete=\"email\"\n//             value={inputs.email}\n//             onChange={handleChange}\n//           ></input>\n//         </label>\n//         <label htmlFor=\"password\">\n//           password\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Your Password\"\n//             autoComplete=\"password\"\n//             value={inputs.password}\n//             onChange={handleChange}\n//           ></input>\n//         </label>\n//         <button type=\"submit\">Sign In</button>\n//       </fieldset>\n//     </Form>\n//   );\n// }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}