{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/pages/orders.js\";\n// this will catch the specific route of the order [id] is a\n// placeholder for the order id\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport next from \"next\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport OrderStyles from \"../components/styles/OrderStyles\";\nimport Head from \"next/head\";\nimport formatMoney from \"../lib/formatMoney\";\nconst USER_ORDER_QUERY = gql`\n  query USER_ORDER_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function OrdersPage() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USER_ORDER_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/pages/orders.js"],"names":["useQuery","gql","next","ErrorMessage","OrderStyles","Head","formatMoney","USER_ORDER_QUERY","OrdersPage","data","error","loading","allOrders"],"mappings":";;AAAA;AACA;AAEA,SAAQA,QAAR,QAAuB,gBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,MAAMC,gBAAgB,GAAGN,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAyBA,eAAe,SAASO,UAAT,GAAsB;AACnC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBX,QAAQ,CAACO,gBAAD,CAAvC;AACA,MAAII,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAACE,IAAAA;AAAD,MAAcH,IAApB;AACA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAID","sourcesContent":["// this will catch the specific route of the order [id] is a\n// placeholder for the order id\n\nimport {useQuery} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport next from \"next\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport OrderStyles from \"../components/styles/OrderStyles\";\nimport Head from \"next/head\";\nimport formatMoney from \"../lib/formatMoney\";\nconst USER_ORDER_QUERY = gql`\n  query USER_ORDER_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function OrdersPage() {\n  const {data, error, loading} = useQuery(USER_ORDER_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const {allOrders} = data;\n  return (\n    <div>\n      <h2></h2></div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}