{"ast":null,"code":"export default function calcTotalPrice(cart) {\n  return cart.reduce((tally, cartItem) => {\n    //this accounts for items that sell out while still in a users cart\n    if (!cartItem.product) return tally;\n    return tally + cartItem.quantity * cartItemproduct.price;\n  }, 0);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/lib/calcTotalPrice.js"],"names":["calcTotalPrice","cart","reduce","tally","cartItem","product","quantity","cartItemproduct","price"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC3C,SAAOA,IAAI,CAACC,MAAL,CAAY,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACtC;AACA,QAAI,CAACA,QAAQ,CAACC,OAAd,EAAuB,OAAOF,KAAP;AACvB,WAAOA,KAAK,GAAGC,QAAQ,CAACE,QAAT,GAAoBC,eAAe,CAACC,KAAnD;AACD,GAJM,EAIJ,CAJI,CAAP;AAKD","sourcesContent":["export default function calcTotalPrice(cart) {\n  return cart.reduce((tally, cartItem) => {\n    //this accounts for items that sell out while still in a users cart\n    if (!cartItem.product) return tally;\n    return tally + cartItem.quantity * cartItemproduct.price;\n  }, 0);\n}\n"]},"metadata":{},"sourceType":"module"}