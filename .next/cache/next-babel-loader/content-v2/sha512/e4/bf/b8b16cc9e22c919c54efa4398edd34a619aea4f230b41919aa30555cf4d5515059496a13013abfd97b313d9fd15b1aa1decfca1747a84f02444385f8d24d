{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/SignUp.js\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    createUser(data: {email: $email, name: $name, password: $password}) {\n      id\n      email\n      name\n    }\n  }\n`;\nexport default function SignUp() {\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [signUp, {\n    data,\n    loading,\n    error\n  }] = useMutation(SIGNUP_MUTATION, {\n    variables: inputs //refetch the currently logged in user\n    // refetchQueries: [{query: CURRENT_USER_QUERY}],\n\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await signUp();\n    resetForm(); //here the email and password is sent to the graphql api\n  } // const error =\n  //   data?.authenticateUserWithPassword.__typename ===\n  //   \"UserAuthenticationWithPasswordFailure\"\n  //     ? data?.authenticateUserWithPassword\n  //     : undefined;\n\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up For An Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Your Name\",\n          autoComplete: \"name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email Address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/SignUp.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","Error","SIGNUP_MUTATION","SignUp","inputs","handleChange","resetForm","name","email","password","signUp","data","loading","error","variables","handleSubmit","e","preventDefault"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAAQC,kBAAR,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,eAAe,GAAGN,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAcA,eAAe,SAASO,MAAT,GAAkB;AAC/B,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,YAAT;AAAuBC,IAAAA;AAAvB,MAAoCP,OAAO,CAAC;AAChDQ,IAAAA,IAAI,EAAE,EAD0C;AAEhDC,IAAAA,KAAK,EAAE,EAFyC;AAGhDC,IAAAA,QAAQ,EAAE;AAHsC,GAAD,CAAjD;AAMA,QAAM,CAACC,MAAD,EAAS;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAT,IAAmChB,WAAW,CAACK,eAAD,EAAkB;AACpEY,IAAAA,SAAS,EAAEV,MADyD,CAEpE;AACA;;AAHoE,GAAlB,CAApD;;AAMA,iBAAeW,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMP,MAAM,EAAZ;AACAJ,IAAAA,SAAS,GAHoB,CAI7B;AACD,GAlB8B,CAmB/B;AACA;AACA;AACA;AACA;;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAES,YAA9B;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,YAAY,EAAC,MAJf;AAKE,UAAA,KAAK,EAAET,MAAM,CAACG,IALhB;AAME,UAAA,QAAQ,EAAEF;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACI,KALhB;AAME,UAAA,QAAQ,EAAEH;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,YAAY,EAAC,UAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACK,QALhB;AAME,UAAA,QAAQ,EAAEJ;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,eAkCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD","sourcesContent":["import gql from \"graphql-tag\";\nimport {useMutation} from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport {CURRENT_USER_QUERY} from \"./User\";\nimport Error from \"./ErrorMessage\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    createUser(data: {email: $email, name: $name, password: $password}) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nexport default function SignUp() {\n  const {inputs, handleChange, resetForm} = useForm({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [signUp, {data, loading, error}] = useMutation(SIGNUP_MUTATION, {\n    variables: inputs,\n    //refetch the currently logged in user\n    // refetchQueries: [{query: CURRENT_USER_QUERY}],\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    await signUp();\n    resetForm();\n    //here the email and password is sent to the graphql api\n  }\n  // const error =\n  //   data?.authenticateUserWithPassword.__typename ===\n  //   \"UserAuthenticationWithPasswordFailure\"\n  //     ? data?.authenticateUserWithPassword\n  //     : undefined;\n\n \n\n  return (\n    <Form method=\"POST\" onSubmit={handleSubmit}>\n      \n      <h2>Sign Up For An Account</h2>\n      <Error error={error} />\n      <fieldset>\n        <label htmlFor=\"name\">\n          name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your Name\"\n            autoComplete=\"name\"\n            value={inputs.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email Address\"\n            autoComplete=\"email\"\n            value={inputs.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"password\"\n            value={inputs.password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">Sign Up!</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}