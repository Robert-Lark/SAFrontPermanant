{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/lib/cartState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext } from \"react\";\nvar LocalStateContext = /*#__PURE__*/createContext();\nvar LocalStateProvider = localStateContext.Provider;\n\nfunction CartStateProvider(_ref) {\n  var children = _ref.children;\n  //this is the custom provider where data (state) is stored as well as functionality (updaters)\n  // it can be accessed using the consumer\n  var cartOpen = true;\n  return /*#__PURE__*/_jsxDEV(LocalStateProvider, {\n    value: {\n      cartOpen: cartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n} //this is the custom hook for accessing the cart's local state\n\n\n_c = CartStateProvider;\n\nfunction useCart() {\n  _s();\n\n  // we use a consumer here to access the local state\n  var all = useContext(LocalStateContext);\n  return all;\n}\n\n_s(useCart, \"k0r6hllA0ZVFTbsvyQUS1AVLOSY=\");\n\nexport { CartStateProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartStateProvider\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/lib/cartState.js"],"names":["createContext","LocalStateContext","LocalStateProvider","localStateContext","Provider","CartStateProvider","children","cartOpen","useCart","all","useContext"],"mappings":";;;;;AAAA,SAAQA,aAAR,QAA4B,OAA5B;AAEA,IAAMC,iBAAiB,gBAAGD,aAAa,EAAvC;AACA,IAAME,kBAAkB,GAAGC,iBAAiB,CAACC,QAA7C;;AAEA,SAASC,iBAAT,OAAuC;AAAA,MAAXC,QAAW,QAAXA,QAAW;AACrC;AACA;AAEA,MAAMC,QAAQ,GAAG,IAAjB;AAEA,sBAAO,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAE;AAACA,MAAAA,QAAQ,EAARA;AAAD,KAA3B;AAAA,cAAwCD;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAGD;;;KAVSD,iB;;AAYT,SAASG,OAAT,GAAmB;AAAA;;AACf;AACA,MAAMC,GAAG,GAAGC,UAAU,CAACT,iBAAD,CAAtB;AACA,SAAOQ,GAAP;AACH;;GAJQD,O;;AAKT,SAAQH,iBAAR","sourcesContent":["import {createContext} from \"react\";\n\nconst LocalStateContext = createContext();\nconst LocalStateProvider = localStateContext.Provider;\n\nfunction CartStateProvider({children}) {\n  //this is the custom provider where data (state) is stored as well as functionality (updaters)\n  // it can be accessed using the consumer\n\n  const cartOpen = true;\n\n  return <LocalStateProvider value={{cartOpen}}>{children}</LocalStateProvider>;\n}\n\n\n//this is the custom hook for accessing the cart's local state\n\nfunction useCart() {\n    // we use a consumer here to access the local state\n    const all = useContext(LocalStateContext);\n    return all\n}\nexport {CartStateProvider};\n"]},"metadata":{},"sourceType":"module"}