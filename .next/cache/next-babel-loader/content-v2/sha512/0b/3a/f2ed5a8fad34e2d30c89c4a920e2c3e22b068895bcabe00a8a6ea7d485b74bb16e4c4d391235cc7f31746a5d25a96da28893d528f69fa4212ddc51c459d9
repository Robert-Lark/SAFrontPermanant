{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/pages/order/[id].js\";\n// this will catch the specific route of the order [id] is a\n// placeholder for the order id\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!) {\n        order: Order(where: { id: $id}) {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTranformed\n                    }\n                }\n            }\n        } \n    }\n`;\nexport default function singleOrderPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 21\n  }, this);\n  const {\n    order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"hey \", order.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/pages/order/[id].js"],"names":["useQuery","gql","ErrorMessage","SINGLE_ORDER_QUERY","singleOrderPage","query","data","error","loading","variables","id","order"],"mappings":";;AAAA;AACA;AAEA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAyBA,eAAe,SAASG,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAkC;AAC/C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBR,QAAQ,CAACG,kBAAD,EAAqB;AAC1DM,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEL,KAAK,CAACK;AAAX;AAD+C,GAArB,CAAvC;AAGA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAACI,IAAAA;AAAD,MAAUL,IAAhB;AACA,sBAAO;AAAA,uBAAUK,KAAK,CAACD,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["// this will catch the specific route of the order [id] is a\n// placeholder for the order id\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: ID!) {\n        order: Order(where: { id: $id}) {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                photo {\n                    image {\n                        publicUrlTranformed\n                    }\n                }\n            }\n        } \n    }\n`;\n\nexport default function singleOrderPage({query}) {\n  const {data, error, loading} = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {id: query.id},\n  });\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const {order} = data;\n  return <div>hey {order.id}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}