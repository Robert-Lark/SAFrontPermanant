{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { resetIdCounter, useCombobox } from \"downshift\";\nimport { DropDown, DropDownItem, SearchStyles } from \"./styles/DropDown\";\nexport default function Search() {\n  resetIdCounter;\n  const {\n    getMenuProps,\n    getInputProps,\n    getComboboxProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      console.log(\"input changed\");\n    },\n\n    onSelectedItemChange() {\n      console.log(\"selected item changed\");\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: \"search\",\n        placeholder: 'Search for a title',\n        id: 'search',\n        className: 'loading'\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 8\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \" Hey  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \" Hello  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \" Hi  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/components/Search.js"],"names":["resetIdCounter","useCombobox","DropDown","DropDownItem","SearchStyles","Search","getMenuProps","getInputProps","getComboboxProps","items","onInputValueChange","console","log","onSelectedItemChange","type","placeholder","id","className"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,SAAQC,QAAR,EAAkBC,YAAlB,EAAgCC,YAAhC,QAAmD,mBAAnD;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC7BL,EAAAA,cAAc;AACd,QAAM;AAACM,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAAmDP,WAAW,CAAC;AACjEQ,IAAAA,KAAK,EAAE,EAD0D;;AAEjEC,IAAAA,kBAAkB,GAAG;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAJgE;;AAKjEC,IAAAA,oBAAoB,GAAG;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAPgE,GAAD,CAApE;AASF,sBACE,QAAC,YAAD;AAAA,4BACD,+CAASJ,gBAAgB,EAAzB;AAAA,6BACI,mCAAWD,aAAa,CAAC;AACrBO,QAAAA,IAAI,EAAE,QADe;AAErBC,QAAAA,WAAW,EAAE,oBAFQ;AAGrBC,QAAAA,EAAE,EAAE,QAHiB;AAIrBC,QAAAA,SAAS,EAAE;AAJU,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADC,eASD,QAAC,QAAD;AAAA,8BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD","sourcesContent":["import { resetIdCounter, useCombobox } from \"downshift\";\nimport {DropDown, DropDownItem, SearchStyles} from \"./styles/DropDown\";\n\nexport default function Search() {\n    resetIdCounter\n    const {getMenuProps, getInputProps, getComboboxProps } = useCombobox({\n        items: [],\n        onInputValueChange() {\n            console.log(\"input changed\")\n        },\n        onSelectedItemChange() {\n            console.log(\"selected item changed\")\n        }\n    })\n  return (\n    <SearchStyles>\n   <div {...getComboboxProps()}>\n       <input {...getInputProps({\n           type: \"search\",\n           placeholder: 'Search for a title',\n           id: 'search',\n           className: 'loading'\n       })}/>\n   </div>\n   <DropDown>\n       <DropDownItem> Hey  </DropDownItem>\n       <DropDownItem> Hello  </DropDownItem>\n       <DropDownItem> Hi  </DropDownItem>\n   </DropDown>\n    </SearchStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}