{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/pages/order/[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery SINGLE_ORDER_QUERY($id: ID!) {\\n    order: Order(where: { id: $id}) {\\n        id\\n        charge\\n        total\\n        user {\\n            id\\n        }\\n        items {\\n            id\\n            name\\n            description\\n            price\\n            quantity\\n            photo {\\n                image {\\n                    publicUrlTranformed\\n                }\\n            }\\n        }\\n    }: \\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// this will catch the specific route of the order [id] is a\n// placeholder for the order id\nimport gql from \"graphql-tag\";\nimport ErrorMessage from '../../';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function singleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"hey \", query.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n_s(singleOrderPage, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", true);","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/pages/order/[id].js"],"names":["gql","ErrorMessage","SINGLE_ORDER_QUERY","singleOrderPage","query","useQuery","variables","id","data","error","loading"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;AAyBA,eAAe,SAASG,eAAT,OAAkC;AAAA;;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AAAA,kBACdC,QAAQ,CAACH,kBAAD,EAAqB;AACxDI,IAAAA,SAAS,EAAE;AAACC,MAAAA,EAAE,EAAEH,KAAK,CAACG;AAAX;AAD6C,GAArB,CADM;AAAA,MACtCC,IADsC,aACtCA,IADsC;AAAA,MAChCC,KADgC,aAChCA,KADgC;AAAA,MACzBC,OADyB,aACzBA,OADyB;;AAI7C,MAAGA,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGD,KAAH,EAAU,oBAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,sBAAO;AAAA,uBAAUL,KAAK,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAPuBJ,e","sourcesContent":["// this will catch the specific route of the order [id] is a\n// placeholder for the order id\n\nimport gql from \"graphql-tag\";\nimport ErrorMessage from '../../'\nconst SINGLE_ORDER_QUERY = gql`\nquery SINGLE_ORDER_QUERY($id: ID!) {\n    order: Order(where: { id: $id}) {\n        id\n        charge\n        total\n        user {\n            id\n        }\n        items {\n            id\n            name\n            description\n            price\n            quantity\n            photo {\n                image {\n                    publicUrlTranformed\n                }\n            }\n        }\n    }: \n}\n`\n\nexport default function singleOrderPage({query}) {\n    const {data, error, loading} = useQuery(SINGLE_ORDER_QUERY, {\n        variables: {id: query.id},\n    });\n    if(loading) return <p>Loading...</p>\n    if(error) return <ErrorMessage></ErrorMessage>\n  return <div>hey {query.id}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}