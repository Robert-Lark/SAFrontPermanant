{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Pagination.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    _allProductsMeta {\\n      count\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport PaginationStyles from './styles/PaginationStyles';\nimport DisplayError from './ErrorMessage';\nimport { perPage } from '../config'; //This page takes care of the ui and code needed to scroll to new pages to \n// view more items\n\nexport var PAGINATION_QUERY = gql(_templateObject()); //this component is rendered at the top and bottom of the products page (/pages/products/index)\n\nexport default function Pagination(_ref) {\n  _s();\n\n  var page = _ref.page;\n\n  //GQL Code  \n  var _useQuery = useQuery(PAGINATION_QUERY),\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (loading) return 'Loading...';\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 19\n  }, this);\n  var count = data._allProductsMeta.count; //Round the returned ammount of pages up and store it.   \n\n  var pageCount = Math.ceil(count / perPage);\n  return /*#__PURE__*/_jsxDEV(PaginationStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sonic Architecture - Page \", page, \" of \", pageCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/products/\".concat(page - 1),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"aria-disabled\": page <= 1,\n        children: \"\\u2190 Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Page \", page, \" of \", pageCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [count, \" Items Total\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/products/\".concat(page + 1),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"aria-disabled\": page >= pageCount,\n        children: \"Next \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"MadqETWYtkFh3dDWW9IjxDLlwQw=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Pagination.js"],"names":["useQuery","gql","Head","Link","PaginationStyles","DisplayError","perPage","PAGINATION_QUERY","Pagination","page","error","loading","data","count","_allProductsMeta","pageCount","Math","ceil"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CAEA;AACA;;AAGA,OAAO,IAAMC,gBAAgB,GAAGN,GAAH,mBAAtB,C,CAOP;;AACA,eAAe,SAASO,UAAT,OAA4B;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAC3C;AAD2C,kBAEVT,QAAQ,CAACO,gBAAD,CAFE;AAAA,MAEnCG,KAFmC,aAEnCA,KAFmC;AAAA,MAE5BC,OAF4B,aAE5BA,OAF4B;AAAA,MAEnBC,IAFmB,aAEnBA,IAFmB;;AAG3C,MAAID,OAAJ,EAAa,OAAO,YAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAJgC,MAKnCG,KALmC,GAKzBD,IAAI,CAACE,gBALoB,CAKnCD,KALmC,EAM3C;;AACA,MAAME,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,GAAGP,OAAlB,CAAlB;AACE,sBACE,QAAC,gBAAD;AAAA,4BAEE,QAAC,IAAD;AAAA,6BACE;AAAA,iDAAkCG,IAAlC,UAA4CM,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAMA,QAAC,IAAD;AAAM,MAAA,IAAI,sBAAeN,IAAI,GAAG,CAAtB,CAAV;AAAA,6BACI;AAAG,yBAAeA,IAAI,IAAI,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANA,eASE;AAAA,0BACQA,IADR,UACkBM,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAYE;AAAA,iBAAIF,KAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,IAAD;AAAM,MAAA,IAAI,sBAAeJ,IAAI,GAAG,CAAtB,CAAV;AAAA,6BACE;AAAG,yBAAeA,IAAI,IAAIM,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3BuBP,U;UAESR,Q;;;KAFTQ,U","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport PaginationStyles from './styles/PaginationStyles';\nimport DisplayError from './ErrorMessage';\nimport { perPage } from '../config';\n\n//This page takes care of the ui and code needed to scroll to new pages to \n// view more items\n\n\nexport const PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    _allProductsMeta {\n      count\n    }\n  }\n`;\n//this component is rendered at the top and bottom of the products page (/pages/products/index)\nexport default function Pagination({page}) {\n//GQL Code  \nconst { error, loading, data } = useQuery(PAGINATION_QUERY);\nif (loading) return 'Loading...';\nif (error) return <DisplayError error={error} />;\nconst { count } = data._allProductsMeta;\n//Round the returned ammount of pages up and store it.   \nconst pageCount = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles>\n        {/* SEO */}\n      <Head>\n        <title>Sonic Architecture - Page {page} of {pageCount}</title>\n      </Head>\n    {/* Page is brought in from pages/products/index and placed on the url */}\n    <Link href={`/products/${page - 1}`}>\n        <a aria-disabled={page <= 1}>← Prev</a>\n      </Link>\n      <p>\n        Page {page} of {pageCount}\n      </p>\n      <p>{count} Items Total</p>\n      <Link href={`/products/${page + 1}`}>\n        <a aria-disabled={page >= pageCount}>Next →</a>\n      </Link>\n    </PaginationStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}