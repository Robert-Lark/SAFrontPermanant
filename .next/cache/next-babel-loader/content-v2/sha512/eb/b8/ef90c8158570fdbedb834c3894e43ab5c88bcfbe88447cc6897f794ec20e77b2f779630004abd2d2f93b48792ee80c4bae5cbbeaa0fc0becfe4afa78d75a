{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/frontend/components/Checkout.js\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport nProgress from \"nprogress\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from \"./styles/SickButton\";\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-10mtoy5-0\"\n})([\"box-shadow:0 1px 2px 2px rgba(0,0,0,0.04);border:1px solid rgba(0,0,0,0.06);border-radius:5px;padding:1rem;display:grid;grid-gap:1rem;\"]);\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    // stop the form from submitting and turn the loader on\n    e.preventDefault();\n    setLoading(true); // start the page transition\n\n    nProgress.start(); // create the payment method via stripe (token comes back here if successfull)\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod); // handle any errors from stripe ie declines etc\n\n    if (error) {\n      setError(error);\n    } // send token to our keystone server via a custom mutation\n    // change the page to view the order\n    // close the cart\n    //  turn the loader off\n\n\n    console.log(\"lets get to work\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SickButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\nfunction Checkout() {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/frontend/components/Checkout.js"],"names":["CardElement","Elements","useElements","useStripe","loadStripe","nProgress","useState","styled","SickButton","CheckoutFormStyles","form","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","start","paymentMethod","createPaymentMethod","type","card","getElement","console","log","Checkout"],"mappings":";;AAAA,SAAQA,WAAR,EAAqBC,QAArB,EAA+BC,WAA/B,EAA4CC,SAA5C,QAA4D,yBAA5D;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,IAAV;AAAA;AAAA;AAAA,8IAAxB;AASA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAA5B;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAMkB,QAAQ,GAAGnB,WAAW,EAA5B;;AACA,iBAAeoB,YAAf,CAA4BC,CAA5B,EAA+B;AAC7B;AACAA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV,CAH6B,CAI7B;;AACAd,IAAAA,SAAS,CAACoB,KAAV,GAL6B,CAM7B;;AACA,UAAM;AAACT,MAAAA,KAAD;AAAQU,MAAAA;AAAR,QAAyB,MAAMN,MAAM,CAACO,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAER,QAAQ,CAACS,UAAT,CAAoB9B,WAApB;AAFwD,KAA3B,CAArC;AAIA+B,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ,EAX6B,CAY7B;;AACA,QAAIV,KAAJ,EAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAf4B,CAgB7B;AACA;AACA;AACA;;;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AACD,sBACE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEV,YAA9B;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,SAASW,QAAT,GAAoB;AAClB,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEtB,SAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,SAAQsB,QAAR","sourcesContent":["import {CardElement, Elements, useElements, useStripe} from \"@stripe/react-stripe-js\";\nimport {loadStripe} from \"@stripe/stripe-js\";\nimport nProgress from \"nprogress\";\nimport {useState} from \"react\";\nimport styled from \"styled-components\";\nimport SickButton from \"./styles/SickButton\";\nconst CheckoutFormStyles = styled.form`\n  box-shadow: 0 1px 2px 2px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(0, 0, 0, 0.06);\n  border-radius: 5px;\n  padding: 1rem;\n  display: grid;\n  grid-gap: 1rem;\n`;\n\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements()\n  async function handleSubmit(e) {\n    // stop the form from submitting and turn the loader on\n    e.preventDefault();\n    setLoading(true);\n    // start the page transition\n    nProgress.start()\n    // create the payment method via stripe (token comes back here if successfull)\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod)\n    // handle any errors from stripe ie declines etc\n    if (error) {\n      setError(error)\n    }\n    // send token to our keystone server via a custom mutation\n    // change the page to view the order\n    // close the cart\n    //  turn the loader off\n    console.log(\"lets get to work\");\n  }\n  return (\n    <CheckoutFormStyles onSubmit={handleSubmit}>\n      <CardElement />\n      <SickButton>Check Out Now</SickButton>\n    </CheckoutFormStyles>\n  );\n}\n\nfunction Checkout() {\n  return (\n    <Elements stripe={stripeLib}>\n      <CheckoutForm />\n    </Elements>\n  );\n}\n\nexport {Checkout};\n"]},"metadata":{},"sourceType":"module"}