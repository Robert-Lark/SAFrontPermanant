{"ast":null,"code":"import _slicedToArray from \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/DeleteProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\\n    deleteProduct(id: $id) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nvar DELETE_PRODUCT_MUTATION = gql(_templateObject()); //payoad = what gets returned from the mutation\n\nfunction update(cache, payload) {\n  cache.evict();\n} //children is the content between the actual button on the product page\n\n\nexport default function DeleteProduct(_ref) {\n  _s();\n\n  var id = _ref.id,\n      children = _ref.children;\n\n  var _useMutation = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: update\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      deleteProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: function onClick() {\n      if (confirm('Are you sure you want to delete this item?')) {\n        // go ahead and delete it\n        console.log('DELTEe');\n        deleteProduct()[\"catch\"](function (err) {\n          return alert(err.message);\n        });\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeleteProduct, \"Ps0J/kGno/pxP02U3XEwZE1Q1Tg=\", false, function () {\n  return [useMutation];\n});\n\n_c = DeleteProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteProduct\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/DeleteProduct.js"],"names":["useMutation","gql","DELETE_PRODUCT_MUTATION","update","cache","payload","evict","DeleteProduct","id","children","variables","deleteProduct","loading","error","confirm","console","log","err","alert","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAQA,WAAR,QAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,uBAAuB,GAAGD,GAAH,mBAA7B,C,CASA;;AAEA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC5BD,EAAAA,KAAK,CAACE,KAAN;AACH,C,CAED;;;AACA,eAAe,SAASC,aAAT,OAAuC;AAAA;;AAAA,MAAfC,EAAe,QAAfA,EAAe;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAAA,qBACNT,WAAW,CACnDE,uBADmD,EAEnD;AACEQ,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF,KADb;AAEEL,IAAAA,MAAM,EAAEA;AAFV,GAFmD,CADL;AAAA;AAAA,MAC3CQ,aAD2C;AAAA;AAAA,MAC1BC,OAD0B,kBAC1BA,OAD0B;AAAA,MACjBC,KADiB,kBACjBA,KADiB;;AAQpD,sBACE;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,QAAQ,EAAED,OAFV;AAGA,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIE,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACzD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAL,QAAAA,aAAa,WAAb,CAAsB,UAACM,GAAD;AAAA,iBAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAd;AAAA,SAAtB;AACD;AACF,KATD;AAAA,cAWCV;AAXD;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvBuBF,a;UACwBP,W;;;KADxBO,a","sourcesContent":["import {useMutation} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\n//payoad = what gets returned from the mutation\n\nfunction update(cache, payload) {\n    cache.evict()\n}\n\n//children is the content between the actual button on the product page\nexport default function DeleteProduct({id, children}) {\n    const [deleteProduct, { loading, error }] = useMutation(\n        DELETE_PRODUCT_MUTATION,\n        {\n          variables: { id },\n          update: update\n        }\n      );\n  return (\n    <button\n    type=\"button\"\n    disabled={loading}\n    onClick={() => {\n      if (confirm('Are you sure you want to delete this item?')) {\n        // go ahead and delete it\n        console.log('DELTEe');\n        deleteProduct().catch((err) => alert(err.message));\n      }\n    }}\n  >\n    {children}\n  </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}