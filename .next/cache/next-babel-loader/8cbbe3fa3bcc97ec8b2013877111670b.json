{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\ndisplay: grif;\\ngrid-template-columns: 1fr\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery ALL_PRODUCTS_QUERY\\t{\\n  allProducts{\\n    id\\n    name\\n    price\\n    description\\n    photo {\\n      id \\n      image{\\n        publicUrlTransformed\\n      }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar productsList = styled.div(_templateObject2());\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message, \"...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.allProducts.map(function (product) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.name\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Products, \"Z+0LgrSWpTZsLds+tjQq9+67f1U=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["useQuery","ALL_PRODUCTS_QUERY","gql","productsList","styled","div","Products","data","error","loading","message","allProducts","map","product","name","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,gBAAvB;AAGA,IAAMC,kBAAkB,GAAGC,GAAH,mBAAxB;AAcA,IAAMC,YAAY,GAAGC,MAAM,CAACC,GAAV,oBAAlB;AAIA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACFN,QAAQ,CAACC,kBAAD,CADN;AAAA,MAC1BM,IAD0B,aAC1BA,IAD0B;AAAA,MACpBC,KADoB,aACpBA,KADoB;AAAA,MACbC,OADa,aACbA,OADa;;AAEjC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,cACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,OAAD;AAAA,0BACpB;AAAA,kBAAqBA,OAAO,CAACC;AAA7B,SAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,eADoB;AAAA,KAArB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAXuBT,Q;UACSN,Q;;;KADTM,Q","sourcesContent":["import {useQuery} from \"@apollo/client\";\n\n\nconst ALL_PRODUCTS_QUERY = gql`\nquery ALL_PRODUCTS_QUERY\t{\n  allProducts{\n    id\n    name\n    price\n    description\n    photo {\n      id \n      image{\n        publicUrlTransformed\n      }\n    }\n`;\nconst productsList = styled.div`\ndisplay: grif;\ngrid-template-columns: 1fr`\n\nexport default function Products() {\n  const {data, error, loading} = useQuery(ALL_PRODUCTS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}...</p>;\n  return (\n    <div>\n      {data.allProducts.map((product) => (\n        <p key={product.id}>{product.name}</p>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}