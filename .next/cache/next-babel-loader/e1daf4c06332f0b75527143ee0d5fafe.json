{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Pagination.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PAGINATION_QUERY {\\n    _allProductsMeta {\\n      count\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport DisplayError from \"./ErrorMessage\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport { perPage } from \"../config\"; //This page takes care of the ui and code needed to scroll to new pages to \n// view more items\n\nvar PAGINATION_QUERY = gql(_templateObject());\nexport default function Pagination(_ref) {\n  _s();\n\n  var page = _ref.page;\n\n  //GQL Code  \n  var _useQuery = useQuery(PAGINATION_QUERY),\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  var count = data._allProductsMeta.count; //Round the returned ammount of pages up and store it.   \n\n  var pageCount = Math.ceil(count / perPage);\n  return /*#__PURE__*/_jsxDEV(PaginationStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sonic Architecture - Page \", page, \" of \", pageCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/products\".concat(page - 1),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"aria-disabled\": page <= 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Page \", page, \" of \", pageCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [count, \" Items Total\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/products\".concat(page + 1),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        \"aria-disabled\": page >= pageCount,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pagination, \"GiCbuNzsD6/Beq272EawZ+N+s04=\", false, function () {\n  return [useQuery];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/Pagination.js"],"names":["useQuery","gql","Head","Link","DisplayError","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","page","error","loading","data","count","_allProductsMeta","pageCount","Math","ceil"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,gBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAAQC,OAAR,QAAsB,WAAtB,C,CAEA;AACA;;AAGA,IAAMC,gBAAgB,GAAGN,GAAH,mBAAtB;AAQA,eAAe,SAASO,UAAT,OAA4B;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAC3C;AAD2C,kBAEZT,QAAQ,CAACO,gBAAD,CAFI;AAAA,MAEpCG,KAFoC,aAEpCA,KAFoC;AAAA,MAE7BC,OAF6B,aAE7BA,OAF6B;AAAA,MAEpBC,IAFoB,aAEpBA,IAFoB;;AAGzC,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAJ8B,MAKpCG,KALoC,GAK3BD,IAAI,CAACE,gBALsB,CAKpCD,KALoC,EAM3C;;AACA,MAAME,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,GAAGP,OAAlB,CAAlB;AACE,sBACE,QAAC,gBAAD;AAAA,4BAEE,QAAC,IAAD;AAAA,6BACE;AAAA,iDAAkCG,IAAlC,UAA4CM,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,IAAD;AAAM,MAAA,IAAI,qBAAcN,IAAI,GAAG,CAArB,CAAV;AAAA,6BACE;AAAG,yBAAeA,IAAI,IAAI,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE;AAAA,0BACQA,IADR,UACkBM,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAYE;AAAA,iBAAIF,KAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,IAAD;AAAM,MAAA,IAAI,qBAAcJ,IAAI,GAAG,CAArB,CAAV;AAAA,6BACA;AAAG,yBAAeA,IAAI,IAAIM,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3BuBP,U;UAEOR,Q;;;KAFPQ,U","sourcesContent":["import {useQuery} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport DisplayError from \"./ErrorMessage\";\nimport PaginationStyles from \"./styles/PaginationStyles\";\nimport {perPage} from \"../config\";\n\n//This page takes care of the ui and code needed to scroll to new pages to \n// view more items\n\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    _allProductsMeta {\n      count\n    }\n  }\n`;\n\nexport default function Pagination({page}) {\n//GQL Code  \nconst {error, loading, data} = useQuery(PAGINATION_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <DisplayError error={error} />;\nconst {count} = data._allProductsMeta;\n//Round the returned ammount of pages up and store it.   \nconst pageCount = Math.ceil(count / perPage);\n  return (\n    <PaginationStyles>\n        {/* SEO */}\n      <Head>\n        <title>Sonic Architecture - Page {page} of {pageCount}</title>\n      </Head>\n    {/* Page is brought in from pages/products/index and placed on the url */}\n      <Link href={`/products${page - 1}`}>\n        <a aria-disabled={page <= 1}>Prev</a>\n      </Link>\n      <p>\n        Page {page} of {pageCount}\n      </p>\n      <p>{count} Items Total</p>\n      <Link href={`/products${page + 1}`}>\n      <a aria-disabled={page >= pageCount}>Next</a>\n      </Link>\n    </PaginationStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}