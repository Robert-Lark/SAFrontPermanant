{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/CreateProduct.js\",\n    _s = $RefreshSig$();\n\n//this is where you can add data to the database\nimport useForm from \"../lib/useForm\";\nexport default function CreateProduct() {\n  _s();\n\n  //here we are destructuring the values that are \n  //returned from the useForm custom hook we built\n  var _useForm = useForm({\n    name: 'dummyName',\n    price: 23343,\n    description: 'dummyDescription'\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange;\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"name\",\n        value: inputs.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"price\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"price\",\n        value: inputs.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateProduct, \"4pI24pxzbUWPwrXlhV3H38hqjnI=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/CreateProduct.js"],"names":["useForm","CreateProduct","name","price","description","inputs","handleChange","clearForm"],"mappings":";;;;;AAAA;AAEA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC;AACA;AAFsC,iBAGPD,OAAO,CAAC;AACnCE,IAAAA,IAAI,EAAE,WAD6B;AAEnCC,IAAAA,KAAK,EAAE,KAF4B;AAGnCC,IAAAA,WAAW,EAAE;AAHsB,GAAD,CAHA;AAAA,MAG/BC,MAH+B,YAG/BA,MAH+B;AAAA,MAGvBC,YAHuB,YAGvBA,YAHuB;;AAQtC,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,MAJd;AAKE,QAAA,KAAK,EAAED,MAAM,CAACH,IALhB;AAME,QAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,OAJd;AAKE,QAAA,KAAK,EAAED,MAAM,CAACF,KALhB;AAME,QAAA,QAAQ,EAAEG;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF,eAqBE;AAAQ,MAAA,OAAO,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAjCuBN,a;UAGSD,O;;;KAHTC,a","sourcesContent":["//this is where you can add data to the database\n\nimport useForm from \"../lib/useForm\";\n\nexport default function CreateProduct() {\n  //here we are destructuring the values that are \n  //returned from the useForm custom hook we built\n  const {inputs, handleChange} = useForm({\n      name: 'dummyName',\n      price: 23343,\n      description: 'dummyDescription'\n  });\n  return (\n    <form>\n      <label htmlFor=\"name\">\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"name\"\n          value={inputs.name}\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor=\"price\">\n        <input\n          type=\"number\"\n          id=\"price\"\n          name=\"price\"\n          placeholder=\"price\"\n          value={inputs.price}\n          onChange={handleChange}\n        />\n      </label>\n      <button onClick={clearForm}></button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}