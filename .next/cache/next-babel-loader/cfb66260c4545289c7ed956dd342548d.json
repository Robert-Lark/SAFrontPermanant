{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/SingleProduct.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\nimport Products from \"./Products\";\nimport Head from 'next/head';\nconst ProductStyles = styled.div`\nbackground: red;\n\n`;\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Product(where: {id: $id}) {\n      name\n      price\n      description\n      id\n      photo {\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function singleProductPage(id) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(DisplayError, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  const {\n    Product\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [\"Sonic Architecture | \", Product.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Product.photo.image.publicUrlTransformed,\n      alt: Product.photo.image.altText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/robertlark/SonicArchitecture/Advanced-React/sick-fits/frontend/components/SingleProduct.js"],"names":["useQuery","gql","DisplayError","Products","Head","ProductStyles","styled","div","SINGLE_ITEM_QUERY","singleProductPage","id","data","loading","error","variables","Product","name","photo","image","publicUrlTransformed","altText","description"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,gBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,MAAMC,aAAa,GAAGC,MAAM,CAACC,GAAI;AACjC;AACA;AACA,CAHA;AAKA,MAAMC,iBAAiB,GAAGP,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,eAAe,SAASQ,iBAAT,CAA2BC,EAA3B,EAA+B;AAC5C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBb,QAAQ,CAACQ,iBAAD,EAAoB;AACzDM,IAAAA,SAAS,EAAE;AACTJ,MAAAA;AADS;AAD8C,GAApB,CAAvC;AAKA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAACE,IAAAA;AAAD,MAAYJ,IAAlB;AACA,sBACE;AAAA,4BAEQ,QAAC,IAAD;AAAA,0CAC0BI,OAAO,CAACC,IADlC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAME;AACE,MAAA,GAAG,EAAED,OAAO,CAACE,KAAR,CAAcC,KAAd,CAAoBC,oBAD3B;AAEE,MAAA,GAAG,EAAEJ,OAAO,CAACE,KAAR,CAAcC,KAAd,CAAoBE;AAF3B;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA,kBAAKL,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD","sourcesContent":["import {useQuery} from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport DisplayError from \"./ErrorMessage\";\nimport Products from \"./Products\";\nimport Head from 'next/head'\n\n\nconst ProductStyles = styled.div`\nbackground: red;\n\n`\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Product(where: {id: $id}) {\n      name\n      price\n      description\n      id\n      photo {\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function singleProductPage(id) {\n  const {data, loading, error} = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id,\n    },\n  });\n  if (loading) return <p>Loading</p>;\n  if (error) return <DisplayError error={error} />;\n  const {Product} = data;\n  return (\n    <div>\n        \n            <Head>\n                Sonic Architecture | {Product.name}\n            </Head>\n        \n      <img\n        src={Product.photo.image.publicUrlTransformed}\n        alt={Product.photo.image.altText}\n      />\n      <div className=\"details\">\n        <h2>{Product.name}</h2>\n        <p>{Product.description}</p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}